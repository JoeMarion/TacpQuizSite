exit
vol_selected
exit
vol_selected
exit
any_selected
exit
if !selected.include?('1')
if !selected.include?('1') || !selected.include?('2')
if !selected.include?('1') || !selected.include?('2');
if !selected.include?('1') || !selected.include?('2')\n
if !selected.include?('1') || !selected.include?('2')
selected
if !selected.include?('1') || !selected.include?('2') || !selected.include?('3')
selected.include?('1')
selected
exit
selected
exit
@score
exit
@score
params
exit
@score.valid?
@score
exit
@score.valid?
params
@score
exit
params
exit
params
exit
click_button 'Start Quiz'
exit
params
@score
score
Score
click_button 'Start Quiz'
check 'score_selected_1'
check score_selected_1
exit
params
click_button('Start Quiz')
exit
params
@score
exit
params
exit
find(:xpath, "//*[@id='score_selected_1']").set(true)
find(:xpath, "//*[@id='score_selected_1']").set(false)
find(:xpath, "//*[@id='score_selected_1']").set(true)
find(:xpath, "//*[@id='score_selected_1']").set(false)
find(:xpath, "//*[@id='score_selected_1']").set(true)
find(:xpath, "//*[@id='score_selected_1']")
exit
params
exit
questions.shuffle.first
questions.shuffle
questions
exit
cookies
question
exit
params
exit
params
exit
params
exit
params
exit
params
correct
exit
params
score_path
exit
answer
exit
answer
score
exit
answer.nil?
answer
exit
answer
exit
answer
exit
score
exit
score.save
score
answer ? score.correct += 1 : score.incorrect += 1
answer = params[:answer]
params
exit
params[:answer]
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params[:data_value]
params
continue
data
params
params[:answer]
score
exit
@score
exit
question
exit
question
exit
question
question.methods.sort
question.methods
question.method
Question
question.question
question
@score.questions.count
@score.questions
@score
exit
quiz
exit
@user
exit
questions[198]
questions[199]
questions[0]
questions.count
exit
questions.flatten.count
questions.count
questions.flatten
questions[1]
questions[0]
questions.count
questions.first
questions
exit
params
exit
params
exit
params[:score][:selected]
params[:score]
params
exit
@quiz
@score.errors.full_messages
@score.errors.full_message
@score.valid?
@score
params
exit
params
exit
@quiz
continue
@user
exit
@user
continue
@user
